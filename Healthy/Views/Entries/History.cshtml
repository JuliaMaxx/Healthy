@model IEnumerable<Healthy.Models.Entry>

@{
    ViewData["Title"] = "History";

}
<div class="head">
    <h1>History</h1>
</div>

@foreach (var group in Model.GroupBy(e => e.IntakeTime.Date).OrderByDescending(g => g.Key))
{
    /// Filter entries where Ate checkbox is checked
    var ateEntries = group.Where(item => item.Ate);

    // Calculate totals for the filtered entries
    var totalCalories = ateEntries.Sum(item => item.Food.Calories * item.Quantity);
    var totalFats = ateEntries.Sum(item => item.Food.Fat * item.Quantity);
    var totalCarbs = ateEntries.Sum(item => item.Food.Carbs * item.Quantity);
    var totalProtein = ateEntries.Sum(item => item.Food.Protein * item.Quantity);

    <h2 class="dates centered">@group.Key.ToString("D")</h2> <!-- Display the date as a heading -->
    <table class="table">
        <thead>
            <tr class="table">
                <th>Food</th>
                <th>Meal Type</th>
                <th>Quantity</th>
                <th>Ate</th>
                <th>Calories</th>
                <th>Fats</th>
                <th>Carbs</th>
                <th>Protein</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in group)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Food.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.MealType)</td>
                    <td class="values">@FormatValue(item.Quantity)</td>
                    <td class="values">@Html.DisplayFor(modelItem => item.Ate)</td>
                    <td class="values">@FormatValue(item.Food.Calories * item.Quantity)</td>
                    <td class="values">@FormatValue(item.Food.Fat * item.Quantity)</td>
                    <td class="values">@FormatValue(item.Food.Carbs * item.Quantity)</td>
                    <td class="values">@FormatValue(item.Food.Protein * item.Quantity)</td>
                    <td class="tableButtons">
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="4">Totals</td>
                <td class="values">@FormatValue(totalCalories)</td>
                <td class="values">@FormatValue(totalFats)</td>
                <td class="values">@FormatValue(totalCarbs)</td>
                <td class="values">@FormatValue(totalProtein)</td>
                <td class="values"></td>
            </tr>
        </tfoot>
    </table>
}

@functions {
    public string FormatValue(double value)
    {
        return value % 1 == 0 ? value.ToString("0") : value.ToString("0.##");
    }
}
