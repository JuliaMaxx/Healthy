@model Healthy.Models.Food

@{
    ViewData["Title"] = "Details";
    @functions {
        public string FormatValue(double value)
        {
            return value % 1 == 0 ? value.ToString("0") : value.ToString("0.##");
        }
    }
}
<div class="head">
    <h1>Details</h1>
</div>

<div class="detailsList">
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Reference)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Reference)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Calories)
        </dt>
        <dd class = "col-sm-10">
            @FormatValue(Model.Calories)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Fat)
        </dt>
        <dd class = "col-sm-10">
            @FormatValue(Model.Fat)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Carbs)
        </dt>
        <dd class = "col-sm-10">
            @FormatValue(Model.Carbs)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Protein)
        </dt>
        <dd class = "col-sm-10">
            @FormatValue(Model.Protein)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.UserName)
        </dd>
    </dl>
</div>
<div class="tableButtons">
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
